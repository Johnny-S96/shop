{"version":3,"sources":["components/collection-preview/collection-preview.styles.js","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.js","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","CollectionPreview","title","items","toUpperCase","filter","item","idx","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCOlectionProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"+LAEaA,EAA6BC,IAAOC,IAAV,4KAU1BC,EAAiBF,IAAOG,GAAV,gIASdC,EAAmBJ,IAAOC,IAAV,gN,eCGdI,EAdW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,OACxB,eAACR,EAAD,WACE,cAACG,EAAD,UAAiBI,EAAME,gBACvB,cAACJ,EAAD,UACGG,EACEE,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACF,GAAD,OACH,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKG,aCfvBC,EAA+Bd,IAAOC,IAAV,yECgBnCc,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGAC,cAAQJ,EAARI,EAZa,SAAC,GAAD,IAAEF,EAAF,EAAEA,YAAF,OAC1B,cAACH,EAAD,UACGG,EAAYL,KAAI,gBAAEC,EAAF,EAAEA,GAAOO,EAAT,6BACf,cAAC,EAAD,eAAgCA,GAARP,WCLxBE,EAAkBC,YAAyB,CAC/CK,UAAWC,MAGPR,EAA+BS,YACnCJ,YAAQJ,GACRS,IAFmCD,CAGnCE,GAEaX,a,gCCjBf,oJAEMY,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKX,eAGFC,EAA8BY,YACzC,CAACD,IACD,SAAAZ,GAAW,OAAIA,EAAcc,OAAOC,KAAKf,GAAaL,KAAI,SAAAqB,GAAG,OAAIhB,EAAYgB,MAAQ,MAG1EC,EAAmB,SAAAC,GAAkB,OAChDL,YACE,CAACD,IACD,SAAAZ,GAAW,OAAIA,EAAcA,EAAYkB,GAAsB,SAGpDb,EAA6BQ,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKQ,cAGFC,EAA4BP,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKX,gB,yECnBJO,IAJK,SAAAc,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACxE,OAAOlB,EAAY,cAAC,IAAD,IAAc,cAACiB,EAAD,eAAsBC,O,6ECF5CC,EAA0BxC,IAAOC,IAAV,8dAkCvBwC,EAAYzC,YAAO0C,IAAP1C,CAAH,0PAeT2C,EAAkB3C,IAAOC,IAAV,wKAMN,gBAAG2C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B7C,IAAOC,IAAV,oIAQzB6C,EAAgB9C,IAAO+C,KAAV,mEAKbC,EAAiBhD,IAAO+C,KAAV,iE,uBCtCZ5B,gBAAQ,MAJI,SAAA8B,GAAQ,MAAK,CACtCC,QAAS,SAAAxC,GAAI,OAAIuC,EAASC,YAAQxC,QAGrBS,EArBQ,SAAC,GAAqB,IAApBT,EAAmB,EAAnBA,KAAMwC,EAAa,EAAbA,QACtBC,EAAyBzC,EAAzByC,KAAMC,EAAmB1C,EAAnB0C,MAAOR,EAAYlC,EAAZkC,SAEpB,OACE,eAACJ,EAAD,WACE,cAACG,EAAD,CAAiBC,SAAUA,IAC3B,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,eAACH,EAAD,eAAkBI,QAEpB,cAACX,EAAD,CAAWY,QAAS,kBAAMH,EAAQxC,IAAO4C,UAAQ,EAAjD","file":"static/js/4.69f80190.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;","import React from 'react';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer\r\n} from './collection-preview.styles.js';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nconst CollectionPreview = ({title, items}) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer>{title.toUpperCase()}</TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n      ))\r\n      }\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default CollectionPreview;","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport { CollectionsOverviewContainer } from './collections-overview.styles.js';\n\nconst CollectionsOverview = ({collections}) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({id, ...otherCOlectionProps}) => (\n      <CollectionPreview key={id} {...otherCOlectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview)","import { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport { compose } from 'redux';\n\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam => \n  createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n  );\n\n  export const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n  );\n\n  export const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n  );","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;","import styled from 'styled-components';\nimport CustomButton from '../custsom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n  \n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 82%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 18%;\n  text-align: right;\n`;","import React from 'react';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles.js';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n  const {name, price, imageUrl} = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>${price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
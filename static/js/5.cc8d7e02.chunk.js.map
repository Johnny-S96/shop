{"version":3,"sources":["pages/collection/collection.styles.js","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"sLAEaA,EAA0BC,IAAOC,IAAV,yEAKvBC,EAAkBF,IAAOG,GAAV,wEAKfC,EAA2BJ,IAAOC,IAAV,uQ,OCiBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAhBQ,SAAC,GAAkB,IAAjBG,EAAgB,EAAhBA,WAChBK,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,MACd,OACA,eAACf,EAAD,WACE,cAACG,EAAD,UAAkBW,IAClB,cAACT,EAAD,UACGU,EAAMC,KAAI,SAAAC,GAAI,OAAK,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKC,eCX9CC,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAd,GAAK,OAAKe,YAA0Bf,MAG3CP,EAA0BuB,YAC9BjB,YAAQa,GACRK,IAF8BD,CAG9BE,GAEazB,a,gCCjBf,oJAEM0B,EAAa,SAAAnB,GAAK,OAAIA,EAAMoB,MAErBC,EAAoBC,YAC/B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcE,OAAOC,KAAKH,GAAad,KAAI,SAAAkB,GAAG,OAAIJ,EAAYI,MAAQ,MAG1ExB,EAAmB,SAAAyB,GAAkB,OAChDN,YACE,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcA,EAAYK,GAAsB,SAGpDC,EAA6BP,YACxC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKU,cAGFf,EAA4BO,YACvC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,yECnBJN,IAJK,SAAAc,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACxE,OAAOlB,EAAY,cAAC,IAAD,IAAc,cAACiB,EAAD,eAAsBC,O,6ECF5CC,EAA0BvC,IAAOC,IAAV,8dAkCvBuC,EAAYxC,YAAOyC,IAAPzC,CAAH,0PAeT0C,EAAkB1C,IAAOC,IAAV,wKAMN,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B5C,IAAOC,IAAV,oIAQzB4C,EAAgB7C,IAAO8C,KAAV,mEAKbC,EAAiB/C,IAAO8C,KAAV,iE,uBCtCZzC,gBAAQ,MAJI,SAAA2C,GAAQ,MAAK,CACtCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGrBX,EArBQ,SAAC,GAAqB,IAApBW,EAAmB,EAAnBA,KAAMiC,EAAa,EAAbA,QACtBC,EAAyBlC,EAAzBkC,KAAMC,EAAmBnC,EAAnBmC,MAAOR,EAAY3B,EAAZ2B,SAEpB,OACE,eAACJ,EAAD,WACE,cAACG,EAAD,CAAiBC,SAAUA,IAC3B,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,eAACH,EAAD,eAAkBI,QAEpB,cAACX,EAAD,CAAWY,QAAS,kBAAMH,EAAQjC,IAAOqC,UAAQ,EAAjD","file":"static/js/5.cc8d7e02.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n  \n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles.js';\n\nconst CollectionPage = ({collection}) => {\n  const {title, items} = collection;\n  return (\n  <CollectionPageContainer>\n    <CollectionTitle>{title}</CollectionTitle>\n    <CollectionItemsContainer>\n      {items.map(item => (<CollectionItem key={item.id} item={item} />))}\n    </CollectionItemsContainer>\n  </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam => \n  createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n  );\n\n  export const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n  );\n\n  export const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n  );","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;","import styled from 'styled-components';\nimport CustomButton from '../custsom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n  \n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 82%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 18%;\n  text-align: right;\n`;","import React from 'react';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles.js';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n  const {name, price, imageUrl} = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>${price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/sign-in/sign-in.styles.js","components/form-input/form-input.styles.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.js","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.js","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","SignInContainer","styled","div","SignInTitle","h2","ButtonsBarContainer","subColor","shrinkLabelStyles","css","GroupContainer","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SignInAndSignUpPage"],"mappings":"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","file":"static/js/9.81109c17.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 380px) {\n    width: 330px;\n  }\n  \n  @media screen and (max-width: 350px) {\n    width: 300px;\n  }\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;","import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;","import React from 'react';\r\n\r\nimport { GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel} from './form-input.styles.js';\r\n\r\nconst FormInput = ({handleChange, label, ...props}) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {\r\n      label ? \r\n      (<FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>)\r\n      : null\r\n    }\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport {SignInContainer, SignInTitle, ButtonsBarContainer} from './sign-in.styles.js';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custsom-button/custom-button.component';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({email: '', password: ''});\r\n\r\n  const { email, password } = userCredentials;\r\n  \r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const {value, name} = event.target;\r\n\r\n    setCredentials({...userCredentials, [name]: value});\r\n  };\r\n  \r\n  return(\r\n    <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n      <FormInput \r\n        name='email' \r\n        type='email' \r\n        value={email} \r\n        handleChange={handleChange}\r\n        label='email'\r\n        required \r\n        />\r\n        <FormInput \r\n        name='password' \r\n        type='password' \r\n        value={password} \r\n        handleChange={handleChange}\r\n        label='password'\r\n        required \r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type='submit'> Sign in </CustomButton>\r\n          <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> \r\n          Sign in with Google \r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n        </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  @media screen and (max-width: 380px) {\n    width: 330px;\n  }\n\n  @media screen and (max-width: 350px) {\n    width: 300px;\n  }\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custsom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles.js';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n\r\n    if(password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const {name, value} = event.target;\r\n\r\n    setUserCredentials({...userCredentials, [name]: value});\r\n  };\r\n\r\n  return(\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have an account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n        type='text'\r\n        name='displayName'\r\n        value={displayName}\r\n        onChange={handleChange}\r\n        label='Display Name'\r\n        required\r\n        />\r\n        <FormInput\r\n        type='email'\r\n        name='email'\r\n        value={email}\r\n        onChange={handleChange}\r\n        label='Email'\r\n        required\r\n        />\r\n        <FormInput\r\n        type='password'\r\n        name='password'\r\n        value={password}\r\n        onChange={handleChange}\r\n        label='Password'\r\n        required\r\n        />\r\n        <FormInput\r\n        type='password'\r\n        name='confirmPassword'\r\n        value={confirmPassword}\r\n        onChange={handleChange}\r\n        label='Confirm Password'\r\n        required\r\n        />\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import styled from 'styled-components';\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n    width: unset;\n    align-items: center;\n    > *:first-child {\n      margin-bottom: 50px;\n    }\n  }\n`;","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport {SignInAndSignUpContainer} from './sign-in-and-sign-up.styles.js';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SignInAndSignUpPage;"],"sourceRoot":""}